// $ANTLR 2.7.7 (20060906): groovy.g -> GroovyTokenTypes.txt$
Groovy    // output token vocab name
BLOCK=4
MODIFIERS=5
OBJBLOCK=6
SLIST=7
METHOD_DEF=8
VARIABLE_DEF=9
INSTANCE_INIT=10
STATIC_INIT=11
TYPE=12
CLASS_DEF=13
INTERFACE_DEF=14
PACKAGE_DEF=15
ARRAY_DECLARATOR=16
EXTENDS_CLAUSE=17
IMPLEMENTS_CLAUSE=18
PARAMETERS=19
PARAMETER_DEF=20
LABELED_STAT=21
TYPECAST=22
INDEX_OP=23
POST_INC=24
POST_DEC=25
METHOD_CALL=26
EXPR=27
IMPORT=28
UNARY_MINUS=29
UNARY_PLUS=30
CASE_GROUP=31
ELIST=32
FOR_INIT=33
FOR_CONDITION=34
FOR_ITERATOR=35
EMPTY_STAT=36
FINAL="final"=37
ABSTRACT="abstract"=38
UNUSED_GOTO="goto"=39
UNUSED_CONST="const"=40
UNUSED_DO="do"=41
STRICTFP="strictfp"=42
SUPER_CTOR_CALL=43
CTOR_CALL=44
CTOR_IDENT=45
VARIABLE_PARAMETER_DEF=46
STRING_CONSTRUCTOR=47
STRING_CTOR_MIDDLE=48
CLOSABLE_BLOCK=49
IMPLICIT_PARAMETERS=50
SELECT_SLOT=51
DYNAMIC_MEMBER=52
LABELED_ARG=53
SPREAD_ARG=54
SPREAD_MAP_ARG=55
LIST_CONSTRUCTOR=56
MAP_CONSTRUCTOR=57
FOR_IN_ITERABLE=58
STATIC_IMPORT=59
ENUM_DEF=60
ENUM_CONSTANT_DEF=61
FOR_EACH_CLAUSE=62
ANNOTATION_DEF=63
ANNOTATIONS=64
ANNOTATION=65
ANNOTATION_MEMBER_VALUE_PAIR=66
ANNOTATION_FIELD_DEF=67
ANNOTATION_ARRAY_INIT=68
TYPE_ARGUMENTS=69
TYPE_ARGUMENT=70
TYPE_PARAMETERS=71
TYPE_PARAMETER=72
WILDCARD_TYPE=73
TYPE_UPPER_BOUNDS=74
TYPE_LOWER_BOUNDS=75
CLOSURE_LIST=76
SH_COMMENT("a script header")=77
LITERAL_package="package"=78
LITERAL_import="import"=79
LITERAL_static="static"=80
LITERAL_def="def"=81
LBRACK("'['")=82
RBRACK("']'")=83
IDENT("an identifier")=84
STRING_LITERAL("a string literal")=85
LT("'<'")=86
DOT("'.'")=87
LPAREN("'('")=88
LITERAL_class="class"=89
LITERAL_interface="interface"=90
LITERAL_enum="enum"=91
AT("'@'")=92
QUESTION("'?'")=93
LITERAL_extends="extends"=94
LITERAL_super="super"=95
COMMA("','")=96
GT("'>'")=97
SR("'>>'")=98
BSR("'>>>'")=99
LITERAL_void="void"=100
LITERAL_boolean="boolean"=101
LITERAL_byte="byte"=102
LITERAL_char="char"=103
LITERAL_short="short"=104
LITERAL_int="int"=105
LITERAL_float="float"=106
LITERAL_long="long"=107
LITERAL_double="double"=108
STAR("'*'")=109
LITERAL_as="as"=110
LITERAL_private="private"=111
LITERAL_public="public"=112
LITERAL_protected="protected"=113
LITERAL_transient="transient"=114
LITERAL_native="native"=115
LITERAL_threadsafe="threadsafe"=116
LITERAL_synchronized="synchronized"=117
LITERAL_volatile="volatile"=118
RPAREN("')'")=119
ASSIGN("'='")=120
BAND("'&'")=121
LCURLY("'{'")=122
RCURLY("'}'")=123
SEMI("';'")=124
NLS("some newlines, whitespace or comments")=125
LITERAL_default="default"=126
LITERAL_throws="throws"=127
LITERAL_implements="implements"=128
LITERAL_this="this"=129
TRIPLE_DOT("'...'")=130
CLOSABLE_BLOCK_OP("'->'")=131
COLON("':'")=132
LITERAL_if="if"=133
LITERAL_else="else"=134
LITERAL_while="while"=135
LITERAL_switch="switch"=136
LITERAL_for="for"=137
LITERAL_in="in"=138
LITERAL_return="return"=139
LITERAL_break="break"=140
LITERAL_continue="continue"=141
LITERAL_throw="throw"=142
LITERAL_assert="assert"=143
PLUS("'+'")=144
MINUS("'-'")=145
LITERAL_case="case"=146
LITERAL_try="try"=147
LITERAL_finally="finally"=148
LITERAL_catch="catch"=149
SPREAD_DOT("'*.'")=150
OPTIONAL_DOT("'?.'")=151
MEMBER_POINTER("'.&'")=152
LITERAL_false="false"=153
LITERAL_instanceof="instanceof"=154
LITERAL_new="new"=155
LITERAL_null="null"=156
LITERAL_true="true"=157
PLUS_ASSIGN("'+='")=158
MINUS_ASSIGN("'-='")=159
STAR_ASSIGN("'*='")=160
DIV_ASSIGN("'/='")=161
MOD_ASSIGN("'%='")=162
SR_ASSIGN("'>>='")=163
BSR_ASSIGN("'>>>='")=164
SL_ASSIGN("'<<='")=165
BAND_ASSIGN("'&='")=166
BXOR_ASSIGN("'^='")=167
BOR_ASSIGN("'|='")=168
STAR_STAR_ASSIGN("'**='")=169
ELVIS_OPERATOR("'?:'")=170
LOR("'||'")=171
LAND("'&&'")=172
BOR("'|'")=173
BXOR("'^'")=174
REGEX_FIND("'=~'")=175
REGEX_MATCH("'==~'")=176
NOT_EQUAL("'!='")=177
EQUAL("'=='")=178
COMPARE_TO("'<=>'")=179
LE("'<='")=180
GE("'>='")=181
SL("'<<'")=182
RANGE_INCLUSIVE("'..'")=183
RANGE_EXCLUSIVE("'..<'")=184
INC("'++'")=185
DIV("'/'")=186
MOD("'%'")=187
DEC("'--'")=188
STAR_STAR("'**'")=189
BNOT("'~'")=190
LNOT("'!'")=191
STRING_CTOR_START=192
STRING_CTOR_END("a string literal end")=193
NUM_INT("a numeric literal")=194
NUM_FLOAT=195
NUM_LONG=196
NUM_DOUBLE=197
NUM_BIG_INT=198
NUM_BIG_DECIMAL=199
DOLLAR("'$'")=200
WS("whitespace")=201
ONE_NL("a newline")=202
ONE_NL_KEEP("a newline")=203
SL_COMMENT("a single line comment")=204
ML_COMMENT("a comment")=205
STRING_CH("a string character")=206
REGEXP_LITERAL("a regular expression literal")=207
REGEXP_CTOR_END("a regular expression literal end")=208
REGEXP_SYMBOL("a regular expression character")=209
ESC("an escape sequence")=210
STRING_NL("a newline inside a string")=211
HEX_DIGIT("a hexadecimal digit")=212
VOCAB("a character")=213
LETTER("a letter")=214
DIGIT("a digit")=215
EXPONENT("an exponent")=216
FLOAT_SUFFIX("a float or double suffix")=217
BIG_SUFFIX("a big decimal suffix")=218
