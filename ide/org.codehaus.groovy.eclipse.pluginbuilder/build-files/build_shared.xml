<!--
    Copyright 2003-2009 the original author or authors.
   
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
   
        http://www.apache.org/licenses/LICENSE-2.0
   
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 -->
<project name="Shared build targets">
    
	<target name="unpack.eclipse">
		<condition property="unpack.eclipse">
			<not>
				<available type="dir" file="${eclipse.installation.dir}"/>
			</not>
		</condition>
		<antcall target="-unpack.eclipse.ifnecessary"/>
	</target>    
    
	<!-- call either with or feature.url or pluginbuilder.eclipse.url
		 sets property archive.location to the archive path in download cache.
	 -->
	<target name="-set.archive.location" if="pluginbuilder.is.server">
		<!-- set default, useful for server where pluginbuilder.eclipse.url.default can be specified in build_local_e3x.properties --> 
		<property name="pluginbuilder.eclipse.url" value="${pluginbuilder.eclipse.url.default}"/>
		<condition property="archive.url" value="${feature.url}" else="${pluginbuilder.eclipse.url}">
				<isset property="feature.url"/>
		</condition>
		<mkdir dir="${eclipse.download.cache}"/>
		<tempfile destdir="${eclipse.download.cache}" property="tmp.file" suffix=".txt" prefix="downloadurl"/>		
		<echo file="${tmp.file}" message="${archive.url}"/>
		<checksum file="${tmp.file}" property="pluginbuilder.eclipse.url.checksum"/>
		<delete file="${tmp.file}"/>
		<property name="archive.location" value="${eclipse.download.cache}/${pluginbuilder.eclipse.url.checksum}"/>
	</target>
	
	<target name="-set.eclipse.local.tar.server" if="pluginbuilder.is.server" depends="-set.archive.location">
		<property name="eclipse.local.tar" value="${archive.location}"/>
	</target>
	
	<target name="-set.target.eclipse.zip" unless="pluginbuilder.is.server">
		<property name="eclipse.local.tar" value="${target.eclipse.zip}"/>
	</target>
	
	<target name="-get.archive.ifnecessary" unless="eclipse.is.downloaded">
		<condition property="archive.url" value="${feature.url}" else="${pluginbuilder.eclipse.url}">
				<isset property="feature.url"/>
		</condition>
		<get src="${archive.url}" dest="${archive.location}" />		
	</target>
	
	<target name="-unpack.eclipse.ifnecessary" if="unpack.eclipse">
		<condition property="is.windows">
	  <os family="windows"/>
		</condition>
		<antcall target="-unpack.eclipse.windows"/>
		<antcall target="-unpack.eclipse.linux"/>
	</target>
	
	<target name="-unpack.eclipse.windows" if="is.windows" depends="-set.eclipse.local.tar.server,-set.target.eclipse.zip">
		<unzip src="${eclipse.local.tar}" overwrite="true" dest="${eclipse.installation.dir}/.."/>		
	</target>
	
	<target name="-unpack.eclipse.linux" unless="is.windows" depends="-set.eclipse.local.tar.server,-set.target.eclipse.zip">
		<untar src="${eclipse.local.tar}" overwrite="true" dest="${eclipse.installation.dir}" compression="gzip"/>		
	</target>
	
</project>