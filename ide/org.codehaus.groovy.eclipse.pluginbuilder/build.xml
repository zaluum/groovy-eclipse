<!--
    Copyright 2003-2009 the original author or authors.
   
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
   
        http://www.apache.org/licenses/LICENSE-2.0
   
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 -->
<project name="Build Facade" default="groovy-main" basedir=".">
  
	<target name="-find.pdebuild.home" description="Locate the precise version of pde being used">
		<files includes="${eclipseDir}/plugins/org.eclipse.pde.build_*/scripts" id="pdebuild.folder" />
		<property name="pdebuild.home" value="${toString:pdebuild.folder}" />
		<echo message="pdebuild.home=${pdebuild.home}" />
	</target>

  <target name="groovy-main" depends="-properties,-clean,unpack.eclipse,-find.pdebuild.home,-build" description="Runs the build.  This is the main entry point for the script">
  </target>
	
	<target name="-build">
		<property name="buildResultsDirectory" value="${buildDirectory}/results" />

		<java classname="org.eclipse.equinox.launcher.Main" fork="true"
			errorproperty="is.build.error"
			resultproperty="java.result">
			<arg value="-application"/>
			<arg value="org.eclipse.ant.core.antRunner"/>
			<arg value="-f"/>
			<arg value="${pdebuild.home}/build.xml"/>
			<!--<arg value="-verbose"/>-->
			<jvmarg value="-DworkDir=${workDir}"/>
			<jvmarg value="-DbuildHome=${buildHome}"/>
			<jvmarg value="-Dbuilder=${buildHome}/build-files"/>
			<jvmarg value="-DbuildDirectory=${buildDirectory}"/>
			<jvmarg value="-DbuildResultsDirectory=${buildDirectory}/results"/>
			<jvmarg value="-DpluginPath=${eclipse.installation.dir}/eclipse/plugins"/>
			<jvmarg value="-DbaseLocation=${buildDirectory}"/>
			<jvmarg value="-DbuildType=N"/>
			<jvmarg value="-DbuildProperties=${buildHome}/build-files/build.properties"/>
			<jvmarg value="-DworkspaceDirBase=${workspaceDirBase}"/>
			<jvmarg value="-DworkspaceDirBaseTest=${workspaceDirBaseTest}"/>
			<jvmarg value="-DworkspaceDirIde=${workspaceDirIde}"/>
			<jvmarg value="-DworkspaceDirIdeTest=${workspaceDirIdeTest}"/>
			<jvmarg value="-Declipse.target.version=${eclipse.target.version}"/>
			<jvmarg value="-DskipFetch=true"/>
			<!-- uncomment to enable debug messages for pde core -->
			<!--<jvmarg value="-Dosgi.debug=${buildHome}/build-files/debug_options.properties"/>-->
			<jvmarg value="-Dversion.full=${version.full}"/>
			<jvmarg value="-Dversion.qualifier=${forceContextQualifier}"/>
			<jvmarg value="-DforceContextQualifier=${forceContextQualifier}"/>
  	
		 	<classpath>
    		<fileset dir="${eclipseDir}/plugins">
  	   		<include name="org.eclipse.equinox.launcher_*.jar"/>
  	    </fileset>
  	  </classpath>
		</java>
  	
  	<fail message="Failed because of: ${is.build.error}">
      <condition>
         <not>
           <equals arg1="${java.result}" arg2="0"/>
         </not>
       </condition>
  	</fail>
  </target>

  				
	<import file="build-files/build_shared.xml"/>
 	<target name="-properties" description="Creates required properties">		
 		<property file="build_local_${eclipse.target.version}.properties" />

		<!-- version identifier -->
		<tstamp>
			<format property="tstampQual" pattern="yyyyMMdd-HH00" locale="en,US" timezone="America/Vancouver"/>
		</tstamp>
		
		<property name="buildTypePresentation" value=""/>
		<property name="buildSuffix" value=""/>
		<echo message="tstampQual=${tstampQual}"/>
    <property name="forceContextQualifier" value="${buildTypePresentationPrefix}${tstampQual}-${buildTypePresentation}${buildSuffix}"/>
		<echo message="=============================================="/>
		<echo message="forceContextQualifier=${forceContextQualifier}"/>
		<echo message="=============================================="/>
		<echo message="=============================================="/>
 		<echo message="basedir=${basedir}"/>
		<echo message="=============================================="/>
		<echo message="=============================================="/>
 		<echo message="projectBaseDir=${projectBaseDir}"/>
		<echo message="=============================================="/>
		<property name="version.full" value="${forceContextQualifier}"/>

		        

		<!-- check if clean should be called -->
		<condition property="is.clean">
			<not>
				<isset property="do.not.clean"/>
			</not>			
		</condition>
	</target>
		
	<target name="-clean" if="is.clean" description="Cleans the build directory if is.clean is set to true">
		<echo level="info" message="Cleaning directory ${buildDirectory}"/>
		<delete dir="${buildDirectory}" verbose="false"/>
		<mkdir dir="${buildDirectory}"/>
	</target>
	
</project>