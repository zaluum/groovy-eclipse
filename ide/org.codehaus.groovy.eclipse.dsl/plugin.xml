<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2011 Codehaus.org, SpringSource, and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
         Andrew Eisenberg - Initial implemenation
 -->
<plugin>
   <extension
         point="org.eclipse.jdt.groovy.core.typeLookup">
      <lookup
            lookup="org.codehaus.groovy.eclipse.dsl.lookup.DSLDTypeLookup">
         <appliesTo
               projectNature="org.eclipse.jdt.groovy.core.groovyNature">
         </appliesTo>
      </lookup>
   </extension>
   <extension
         point="org.eclipse.ui.commands">
      <command
            categoryId="org.codehaus.groovy.eclipse.dsl.command.category"
            description="Refresh DSLD files for the given project"
            id="org.codehaus.groovy.eclipse.dsl.command.refresh"
            name="Refresh DSLDs">
      </command>
      <category
            description="Commands related to DSLD management"
            id="org.codehaus.groovy.eclipse.dsl.command.category"
            name="DSLD-related commands">
      </category>
   </extension>
      <extension
         point="org.eclipse.ui.decorators">
      <decorator
            adaptable="true"
            class="org.codehaus.groovy.eclipse.dsl.classpath.DSLDClasspathContainerDecorator"
            id="org.codehaus.groovy.eclipse.dsl.dsldClasspathContainerDecorator"
            label="DSLD Enablement Decorator"
            lightweight="true"
            state="true">
         <enablement>
            	<objectClass name="org.eclipse.jdt.internal.ui.packageview.ClassPathContainer" />
         </enablement>
      </decorator>
   </extension>
   <extension
         point="org.codehaus.groovy.eclipse.codeassist.completion.completionProposalProvider">
      <proposalProvider
            description="Provides Groovy proposals generated from .dsld files"
            name="Groovy DSL Proposal Provider"
            proposalProvider="org.codehaus.groovy.eclipse.dsl.proposals.DSLDProposalProvider">
         <appliesTo
               projectNature="org.eclipse.jdt.groovy.core.groovyNature">
         </appliesTo>
      </proposalProvider>
   </extension>
   <extension
         point="org.eclipse.ui.popupMenus">
      <objectContribution
            adaptable="true"
            id="org.codehaus.groovy.eclipse.dsl.objectContribution"
            objectClass="org.eclipse.core.resources.IProject">
         <action
               class="org.codehaus.groovy.eclipse.dsl.RefreshDSLDFilesActionDelegate"
               definitionId="org.codehaus.groovy.eclipse.dsl.command.refresh"
               enablesFor="+"
               id="org.codehaus.groovy.eclipse.dsl.action1"
               label="Refresh DSLD files"
               menubarPath="groovy/dsl"
               tooltip="Refresh Groovy DSLs for currentl selected Groovy Project(s)">
         </action>
         <action
               class="org.codehaus.groovy.eclipse.dsl.ui.AddDSLDContainerActtion"
               enablesFor="1"
               id="org.codehaus.groovy.eclipse.importlibs.action"
               label="Add DSL support"
               menubarPath="groovy/dsl"
               tooltip="Add or remove DSL support for this project">
         </action>
          <visibility>
             <objectState
                   name="nature"
                   value="org.eclipse.jdt.groovy.core.groovyNature">
             </objectState>
          </visibility>
      </objectContribution>
   </extension>
   <extension
         point="org.eclipse.ui.startup">
      <startup
            class="org.codehaus.groovy.eclipse.dsl.earlystartup.InitializeAllDSLDs">
      </startup>
   </extension>
   <extension
         point="org.eclipse.core.contenttype.contentTypes">
      <content-type
            base-type="org.eclipse.jdt.groovy.core.groovySource"
            file-extensions="dsld"
            id="org.codehaus.groovy.eclipse.dsl.dsld"
            name="Groovy DSL Descriptor file"
            priority="high">
      </content-type>
   </extension>
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            category="org.codehaus.groovy.eclipse.preferences"
            class="org.codehaus.groovy.eclipse.dsl.ui.DSLPreferencesPage"
            id="org.codehaus.groovy.eclipse.dsl.preferences"
            name="DSLD">
         <keywordReference
               id="org.codehaus.groovy.eclipse.dsl.keywords">
         </keywordReference>
      </page>
   </extension>
   <extension
         point="org.eclipse.ui.newWizards">
      <wizard
            category="org.codehaus.groovy.eclipse"
            class="org.codehaus.groovy.eclipse.dsl.ui.NewDSLDWizard"
            finalPerspective="org.eclipse.jdt.ui.JavaPerspective"
            icon="icons/GROOVY.png"
            id="org.codehaus.groovy.eclipse.dsld.newDsldWizard"
            name="Groovy DSL Descriptor"
            preferredPerspectives="org.eclipse.jdt.ui.JavaPerspective,com.springsource.sts.grails.perspective">
         <description>
            Create a new DSL descriptor file.
         </description>
         <keywordReference
               id="org.codehaus.groovy.eclipse.dsl.keywords">
         </keywordReference>
      </wizard>
   </extension>
   <extension
         point="org.eclipse.ui.keywords">
      <keyword
            id="org.codehaus.groovy.eclipse.dsl.keywords"
            label="groovy dsld dsl descriptor">
      </keyword>
   </extension>
   <extension
         point="org.eclipse.jdt.core.classpathContainerInitializer">
      <classpathContainerInitializer
            class="org.codehaus.groovy.eclipse.dsl.classpath.DSLDContainerInitializer"
            id="GROOVY_DSL_SUPPORT">
      </classpathContainerInitializer>
   </extension>
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="org.codehaus.groovy.eclipse.dsl.DSLPreferencesInitializer">
      </initializer>
   </extension>
</plugin>
